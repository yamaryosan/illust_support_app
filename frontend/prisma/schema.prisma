// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 画像
model images {
    id Int @id @default(autoincrement())
    path String @unique
    description String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    subCategories subCategoriesImages[]
    tips tipsImages[]
    tags tagsImages[]
}

// お絵かきの際のヒント
model tips {
    id Int @id @default(autoincrement())
    title String
    content String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    subCategories subCategoriesTips[]
    tips tipsImages[]
    tags tipsTags[]
}

// タグ (画像にもTipsにも付与できる)
model tags {
    id Int @id @default(autoincrement())
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    tips tipsTags[]
    images tagsImages[]
}

// カテゴリー(画像やTipsには、サブカテゴリーを通じて関係する)
model categories {
    id Int @id @default(autoincrement())
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    subCategories subCategories[]
}

// サブカテゴリー(カテゴリーの中の分類、画像やTipsに付与できる)
model subCategories {
    id Int @id @default(autoincrement())
    category categories @relation(fields: [categoryId], references: [id])
    categoryId Int
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    images subCategoriesImages[]
    tips subCategoriesTips[]
}

// サブカテゴリーと画像の関係
model subCategoriesImages {
    subCategory subCategories @relation(fields: [subCategoryId], references: [id])
    subCategoryId Int
    image images @relation(fields: [imageId], references: [id])
    imageId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@id([subCategoryId, imageId])
}

// サブカテゴリーとヒントの関係
model subCategoriesTips {
    subCategory subCategories @relation(fields: [subCategoryId], references: [id])
    subCategoryId Int
    tip tips @relation(fields: [tipId], references: [id])
    tipId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@id([subCategoryId, tipId])
}

// ヒントと画像の関係
model tipsImages {
    tip tips @relation(fields: [tipId], references: [id])
    tipId Int
    image images @relation(fields: [imageId], references: [id])
    imageId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@id([tipId, imageId])
}

// タグと画像の関係
model tagsImages {
    tag tags @relation(fields: [tagId], references: [id])
    tagId Int
    image images @relation(fields: [imageId], references: [id])
    imageId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@id([tagId, imageId])
}

// TipsとTagsの関係
model tipsTags {
    tip tips @relation(fields: [tipId], references: [id])
    tipId Int
    tag tags @relation(fields: [tagId], references: [id])
    tagId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    @@id([tipId, tagId])
}